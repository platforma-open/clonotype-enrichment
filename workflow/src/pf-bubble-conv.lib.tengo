ll := import("@platforma-sdk/workflow-tengo:ll")

getColumns := func(countsSpec) {
  return {
    axes: [
      {
        column: "elementId",
        spec: countsSpec.axesSpec[1]
      },
      {
        column: "Numerator",
        id: "Condition",
        allowNA: false,
        spec: {
          name: "pl7.app/vdj/condition",
          type: "String",
          domain: {},
          annotations: {
            "pl7.app/label": "Condition"
          }
        }
      },
      {
        column: "Denominator",
        id: "BaselineCondition",
        allowNA: false,
        spec: {
          name: "pl7.app/vdj/Baseline-condition",
          type: "String",
          domain: {},
          annotations: {
            "pl7.app/label": "Baseline Condition"
          }
        }
      }
      ],
    columns: [
      {
        column: "Frequency_Numerator",
        id: "NumeratorFrequency",
        allowNA: false,
        spec: {
          name: "pl7.app/vdj/numerator-frequency",
          valueType: "Double",
          domain: {},
          annotations: {
            "pl7.app/label": "Numerator Frequency",
            "pl7.app/format": ".2e"
          }
        }
      },
      {
        column: "Enrichment",
        id: "enrichment",
        allowNA: false,
        spec: {
          name: "pl7.app/vdj/enrichment",
          valueType: "Double",
          domain: {},
          annotations: {
            "pl7.app/label": "Enrichment",
            "pl7.app/format": ".2f"
          }
        }
      },
      {
        column: "MaxPositiveEnrichment",
        id: "maxenrichment",
        allowNA: false,
        spec: {
          name: "pl7.app/vdj/maxEnrichment",
          valueType: "Double",
          domain: {},
          annotations: {
            "pl7.app/label": "Maximum Enrichment"
          }
        }
      }
      ],
    storageFormat: "Binary",
    partitionKeyLength: 0
  }
}

export ll.toStrict({
	getColumns: getColumns
})
